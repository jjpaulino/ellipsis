#!/usr/bin/env zsh

# export RUBY_GC_HEAP_INIT_SLOTS=1250000
# export RUBY_HEAP_FREE_MIN=100000
# export RUBY_HEAP_SLOTS_INCREMENT=250000
# export RUBY_HEAP_SLOTS_GROWTH_FACTOR=2.2
# export RUBY_GC_MALLOC_LIMIT=59000000
# export NOKOGIRI_USE_SYSTEM_LIBRARIES=1

export rvm_always_trust_rvmrcs_flag=1
export rvm_autolibs_flag=3
export rvm_autoupdate_flag=2
export rvm_gemset_create_on_use_flag=1
export rvm_trust_rvmrcs_flag=1
export rvmsudo_secure_path=0
export rvm_silence_path_mismatch_check_flag=1

# `brew install gcc openssl readline gperftools`

export rvm_architectures=(x86_64)
export rvm_configure_env=(
  ARCH_FLAG=x86_64
  # CC=/usr/local/bin/gcc-10
  # CPP=/usr/local/bin/cpp-10
  # CXX=/usr/local/bin/g++-10
  # CC=clang
  # CPP=clang
  # CXX=clang
  # CFLAGS='-fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free -march=native -mtune=native -Ofast'
  # CCFLAGS='-fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free -march=native -mtune=native -Ofast'
  # CXXFLAGS='-fno-builtin-malloc -fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free -march=native -mtune=native -Ofast'
  CFLAGS='-mtune=native -Ofast'
  CCFLAGS='-mtune=native -Ofast'
  CXXFLAGS='-mtune=native -Ofast'
  # DYLD_FORCE_FLAT_NAMESPACE=true
  # DYLD_INSERT_LIBRARIES=/usr/local/lib/libtcmalloc_minimal.dylib
  # LDFLAGS="-L/usr/local/opt/openssl/lib -L/usr/local/opt/readline/lib -L/usr/local/opt/gperftools/lib"
  # LIBS=-ltcmalloc_minimal
  # PKG_CONFIG_PATH="/usr/local/opt/openssl/lib/pkgconfig:/usr/local/opt/readline/lib/pkgconfig:/usr/local/opt/gperftools/lib/pkgconfig:$PKG_CONFIG_PATH"
)
export rvm_configure_flags=(
  # --sysconfdir=/etc
  # --with-openssl-dir=/usr/local/opt/openssl
  # --with-opt-dir=/usr/local:/usr/local/opt:/usr/local/opt/openssl:/usr/local/opt/readline:/usr/local/opt/gperftools
  # --with-readline-dir=/usr/local/opt/readline
)

# Including this envvar breaks Go, and thus direnv;
# only recorded here to be used in production.
#
# Requires Google perftools:
#   `brew install google-perftools` or `apt-get install google-perftools libgoogle-perftools-dev`
# export LD_PRELOAD=/usr/lib/libtcmalloc_minimal.so # (...under Linux)
# export DYLD_INSERT_LIBRARIES=/usr/local/lib/libtcmalloc_minimal.dylib # (...under OS X)

umask u=rwx,g=rwx,o=rx
